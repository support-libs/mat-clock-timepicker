{"version":3,"file":"mat-time.component.js","sourceRoot":"","sources":["../../../../src/components/mat-time/mat-time.component.ts"],"names":[],"mappings":"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","sourcesContent":["\nimport { Component, Input, Output, OnInit, EventEmitter, ViewEncapsulation } from '@angular/core';\n\nimport { CLOCK_TYPE, ITime } from '../mat-clock/mat-clock.component';\n\n@Component({\n  selector: 'mat-time',\n  templateUrl: './mat-time.component.html',\n  styleUrls: ['./mat-time.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimeComponent implements OnInit {\n\n  @Input() userTime: ITime;\n  @Output() userTimeChange: EventEmitter<ITime> = new EventEmitter();\n\n  @Input() revertLabel: string;\n  @Input() submitLabel: string;\n\n  @Output() onRevert: EventEmitter<null> = new EventEmitter();\n  @Output() onSubmit: EventEmitter<ITime> = new EventEmitter();\n\n  @Input() color: string;\n\n  public VIEW_HOURS = CLOCK_TYPE.HOURS;\n  public VIEW_MINUTES = CLOCK_TYPE.MINUTES;\n  public currentView: CLOCK_TYPE = this.VIEW_HOURS;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    if (!this.userTime) {\n\n      this.userTime = {\n\n        hour: 6,\n        minute: 0,\n        meriden: 'PM',\n        format: 12\n      };\n    }\n\n    if (!this.revertLabel) {\n\n      this.revertLabel = 'Cancel';\n    }\n\n    if (!this.submitLabel) {\n\n      this.submitLabel = 'Okay';\n    }\n  }\n\n  public formatHour(): string {\n\n    if (this.userTime.format === 24) {\n      if (this.userTime.hour === 24) {\n        return '00';\n      } else if (this.userTime.hour < 10) {\n        return '0' + String(this.userTime.hour);\n      }\n    }\n    return String(this.userTime.hour);\n  }\n\n  public formatMinute(): string {\n\n    if (this.userTime.minute === 0) {\n      return '00';\n    } else if (this.userTime.minute < 10) {\n      return '0' + String(this.userTime.minute);\n    } else {\n      return String(this.userTime.minute);\n    }\n  }\n\n  public setCurrentView(type: CLOCK_TYPE) {\n\n    this.currentView = type;\n  }\n\n  public setMeridien(m: 'PM' | 'AM') {\n\n    this.userTime.meriden = m;\n  }\n\n  public revert() {\n\n    this.onRevert.emit();\n  }\n\n  public submit() {\n\n    this.onSubmit.emit(this.userTime);\n  }\n\n  public emituserTimeChange(event: any) {\n\n    this.userTimeChange.emit(this.userTime);\n  }\n}\n"]}