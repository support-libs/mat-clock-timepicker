{"version":3,"file":"mat-clock-timepicker.js","sources":["../package/src/components/mat-clock/mat-clock.component.ts","../package/src/components/mat-time-dialog/mat-time-dialog.component.ts","../package/src/components/mat-time/mat-time.component.ts","../package/src/modules/material-clock-timepicker.module.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\n// Current type to show\nexport enum CLOCK_TYPE {\n    HOURS = 1,\n    MINUTES = 2\n}\n\nexport type TimeFormat = 12 | 24;\n\nexport interface ITime {\n    hour: number;\n    minute: number;\n    meriden: 'PM' | 'AM';\n    format: TimeFormat;\n}\n\n@Component({\n    selector: 'mat-clock',\n    styleUrls: ['./mat-clock.component.scss'],\n    templateUrl: './mat-clock.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ClockComponent implements OnChanges {\n\n    @Input() public userTime: ITime;\n    @Output() public userTimeChange: EventEmitter<ITime> = new EventEmitter();\n    @Input() public currentView: CLOCK_TYPE;\n    @Output() public viewChange = new EventEmitter<CLOCK_TYPE>();\n    @Input() public color: string;\n\n    public steps = new Array<number>();\n    selectedTimePart: number;\n    private STEP_DEG: number;\n\n    ngOnChanges() {\n        this.setupUI();\n    }\n\n    private setupUI() {\n\n        this.steps = new Array<number>();\n\n        switch (this.currentView) {\n\n            case CLOCK_TYPE.HOURS:\n\n                for (let i = 1; i <= this.userTime.format; i++) {\n\n                    this.steps.push(i);\n                    this.selectedTimePart = this.userTime.hour || 0;\n\n                    if (this.selectedTimePart > this.userTime.format) {\n\n                        this.selectedTimePart -= this.userTime.format;\n                    }\n                }\n                break;\n\n            case CLOCK_TYPE.MINUTES:\n\n                for (let i = 5; i <= 55; i += 5) {\n\n                    this.steps.push(i);\n                }\n                this.steps.push(0);\n                this.selectedTimePart = this.userTime.minute || 0;\n                break;\n        }\n    }\n\n    public getPointerStyle() {\n\n        let divider = 1;\n        switch (this.currentView) {\n\n            case CLOCK_TYPE.HOURS:\n                divider = this.userTime.format;\n                break;\n\n            case CLOCK_TYPE.MINUTES:\n                divider = 60;\n                break;\n        }\n\n        let degrees = 0;\n        if (this.currentView === CLOCK_TYPE.HOURS) {\n            degrees = Math.round(this.userTime.hour * (360 / divider)) - 180;\n        } else {\n            degrees = Math.round(this.userTime.minute * (360 / divider)) - 180;\n        }\n\n        const style = {\n\n            '-webkit-transform': 'rotate(' + degrees + 'deg)',\n            '-ms-transform': 'rotate(' + degrees + 'deg)',\n            'transform': 'rotate(' + degrees + 'deg)'\n        };\n\n        return style;\n    }\n\n    private getTimeValueClass(step: number, index: number) {\n\n        if (this.currentView === CLOCK_TYPE.HOURS) {\n            this.STEP_DEG = 360 / this.userTime.format;\n        } else {\n            this.STEP_DEG = 360 / 12;\n        }\n        let classes = 'mat-clock-step mat-clock-deg' + (this.STEP_DEG * (index + 1));\n\n        if (this.selectedTimePart === step) {\n\n            classes += ' mat-primary';\n        }\n\n        return classes;\n    }\n\n    private changeTimeValue(step: number) {\n\n        if (this.currentView === CLOCK_TYPE.HOURS) {\n            this.userTime.hour = step;\n\n            // auto switch to minutes\n            this.viewChange.emit(CLOCK_TYPE.MINUTES);\n        } else {\n            this.userTime.minute = step;\n\n            // auto switch to hours\n            this.viewChange.emit(CLOCK_TYPE.HOURS);\n        }\n        this.userTimeChange.emit(this.userTime);\n    }\n}\n","\nimport { Component, Inject, ViewEncapsulation } from '@angular/core';\nimport { MatDialogRef } from '@angular/material';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\nimport { CLOCK_TYPE, ITime } from '../mat-clock/mat-clock.component';\n\nexport interface DialogData {\n  time: ITime;\n  color: string;\n}\n\n@Component({\n    styleUrls: ['./mat-time-dialog.component.scss'],\n    templateUrl: './mat-time-dialog.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class TimeDialogComponent {\n\n    public userTime: ITime;\n    private VIEW_HOURS = CLOCK_TYPE.HOURS;\n    private VIEW_MINUTES = CLOCK_TYPE.MINUTES;\n    private currentView: CLOCK_TYPE = this.VIEW_HOURS;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) private data: DialogData,\n        @Inject(MAT_DIALOG_DATA) public color: string,\n        private dialogRef: MatDialogRef<TimeDialogComponent>) {\n\n        this.userTime = data.time;\n        this.color = data.color;\n    }\n\n    public revert() {\n\n        this.dialogRef.close(-1);\n    }\n\n    public submit() {\n\n        this.dialogRef.close(this.userTime);\n    }\n}\n","\nimport { Component, Input, Output, OnInit, EventEmitter, ViewEncapsulation } from '@angular/core';\n\nimport { CLOCK_TYPE, ITime } from '../mat-clock/mat-clock.component';\n\n@Component({\n  selector: 'mat-time',\n  templateUrl: './mat-time.component.html',\n  styleUrls: ['./mat-time.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class TimeComponent implements OnInit {\n\n  @Input() userTime: ITime;\n  @Output() userTimeChange: EventEmitter<ITime> = new EventEmitter();\n\n  @Input() revertLabel: string;\n  @Input() submitLabel: string;\n\n  @Output() onRevert: EventEmitter<null> = new EventEmitter();\n  @Output() onSubmit: EventEmitter<ITime> = new EventEmitter();\n\n  @Input() color: string;\n\n  public VIEW_HOURS = CLOCK_TYPE.HOURS;\n  public VIEW_MINUTES = CLOCK_TYPE.MINUTES;\n  public currentView: CLOCK_TYPE = this.VIEW_HOURS;\n\n  constructor() { }\n\n  ngOnInit() {\n\n    if (!this.userTime) {\n\n      this.userTime = {\n\n        hour: 6,\n        minute: 0,\n        meriden: 'PM',\n        format: 12\n      };\n    }\n\n    if (!this.revertLabel) {\n\n      this.revertLabel = 'Cancel';\n    }\n\n    if (!this.submitLabel) {\n\n      this.submitLabel = 'Okay';\n    }\n  }\n\n  public formatHour(): string {\n\n    if (this.userTime.format === 24) {\n      if (this.userTime.hour === 24) {\n        return '00';\n      } else if (this.userTime.hour < 10) {\n        return '0' + String(this.userTime.hour);\n      }\n    }\n    return String(this.userTime.hour);\n  }\n\n  public formatMinute(): string {\n\n    if (this.userTime.minute === 0) {\n      return '00';\n    } else if (this.userTime.minute < 10) {\n      return '0' + String(this.userTime.minute);\n    } else {\n      return String(this.userTime.minute);\n    }\n  }\n\n  public setCurrentView(type: CLOCK_TYPE) {\n\n    this.currentView = type;\n  }\n\n  public setMeridien(m: 'PM' | 'AM') {\n\n    this.userTime.meriden = m;\n  }\n\n  public revert() {\n\n    this.onRevert.emit();\n  }\n\n  public submit() {\n\n    this.onSubmit.emit(this.userTime);\n  }\n\n  public emituserTimeChange(event: any) {\n\n    this.userTimeChange.emit(this.userTime);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MatButtonModule, MatButtonToggleModule, MatDialogModule, MatFormFieldModule, MatIconModule, MatInputModule, MatSelectModule, MatToolbarModule } from '@angular/material';\n\nimport { ClockComponent } from '../components/mat-clock/mat-clock.component';\nimport { TimeDialogComponent } from '../components/mat-time-dialog/mat-time-dialog.component';\nimport { TimeComponent } from '../components/mat-time/mat-time.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatDialogModule,\n    MatIconModule,\n    MatInputModule,\n    MatSelectModule,\n    MatToolbarModule,\n    MatFormFieldModule\n  ],\n  declarations: [\n    TimeDialogComponent,\n    ClockComponent,\n    TimeComponent\n  ],\n  exports: [\n    TimeDialogComponent,\n    ClockComponent,\n    TimeComponent\n  ],\n  entryComponents: [TimeDialogComponent]\n})\nexport class MaterialClockTimepickerModule {}\n"],"names":[],"mappings":"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"}