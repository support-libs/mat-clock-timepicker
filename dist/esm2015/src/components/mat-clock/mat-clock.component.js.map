{"version":3,"file":"mat-clock.component.js","sourceRoot":"","sources":["../../../package/src/components/mat-clock/mat-clock.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation } from '@angular/core';\n\n// Current type to show\nexport enum CLOCK_TYPE {\n    HOURS = 1,\n    MINUTES = 2\n}\n\nexport type TimeFormat = 12 | 24;\n\nexport interface ITime {\n    hour: number;\n    minute: number;\n    meriden: 'PM' | 'AM';\n    format: TimeFormat;\n}\n\n@Component({\n    selector: 'mat-clock',\n    styleUrls: ['./mat-clock.component.scss'],\n    templateUrl: './mat-clock.component.html',\n    encapsulation: ViewEncapsulation.None\n})\nexport class ClockComponent implements OnChanges {\n\n    @Input() public userTime: ITime;\n    @Output() public userTimeChange: EventEmitter<ITime> = new EventEmitter();\n    @Input() public currentView: CLOCK_TYPE;\n    @Output() public viewChange = new EventEmitter<CLOCK_TYPE>();\n    @Input() public color: string;\n\n    public steps = new Array<number>();\n    selectedTimePart: number;\n    private STEP_DEG: number;\n\n    ngOnChanges() {\n        this.setupUI();\n    }\n\n    private setupUI() {\n\n        this.steps = new Array<number>();\n\n        switch (this.currentView) {\n\n            case CLOCK_TYPE.HOURS:\n\n                for (let i = 1; i <= this.userTime.format; i++) {\n\n                    this.steps.push(i);\n                    this.selectedTimePart = this.userTime.hour || 0;\n\n                    if (this.selectedTimePart > this.userTime.format) {\n\n                        this.selectedTimePart -= this.userTime.format;\n                    }\n                }\n                break;\n\n            case CLOCK_TYPE.MINUTES:\n\n                for (let i = 5; i <= 55; i += 5) {\n\n                    this.steps.push(i);\n                }\n                this.steps.push(0);\n                this.selectedTimePart = this.userTime.minute || 0;\n                break;\n        }\n    }\n\n    public getPointerStyle() {\n\n        let divider = 1;\n        switch (this.currentView) {\n\n            case CLOCK_TYPE.HOURS:\n                divider = this.userTime.format;\n                break;\n\n            case CLOCK_TYPE.MINUTES:\n                divider = 60;\n                break;\n        }\n\n        let degrees = 0;\n        if (this.currentView === CLOCK_TYPE.HOURS) {\n            degrees = Math.round(this.userTime.hour * (360 / divider)) - 180;\n        } else {\n            degrees = Math.round(this.userTime.minute * (360 / divider)) - 180;\n        }\n\n        const style = {\n\n            '-webkit-transform': 'rotate(' + degrees + 'deg)',\n            '-ms-transform': 'rotate(' + degrees + 'deg)',\n            'transform': 'rotate(' + degrees + 'deg)'\n        };\n\n        return style;\n    }\n\n    private getTimeValueClass(step: number, index: number) {\n\n        if (this.currentView === CLOCK_TYPE.HOURS) {\n            this.STEP_DEG = 360 / this.userTime.format;\n        } else {\n            this.STEP_DEG = 360 / 12;\n        }\n        let classes = 'mat-clock-step mat-clock-deg' + (this.STEP_DEG * (index + 1));\n\n        if (this.selectedTimePart === step) {\n\n            classes += ' mat-primary';\n        }\n\n        return classes;\n    }\n\n    private changeTimeValue(step: number) {\n\n        if (this.currentView === CLOCK_TYPE.HOURS) {\n            this.userTime.hour = step;\n\n            // auto switch to minutes\n            this.viewChange.emit(CLOCK_TYPE.MINUTES);\n        } else {\n            this.userTime.minute = step;\n\n            // auto switch to hours\n            this.viewChange.emit(CLOCK_TYPE.HOURS);\n        }\n        this.userTimeChange.emit(this.userTime);\n    }\n}\n"]}